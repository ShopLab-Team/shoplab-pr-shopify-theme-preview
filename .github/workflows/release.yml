name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          
      - name: Validate version format
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          # Accept both simple (v1, v2) and semantic versioning (v1.0.0)
          if ! [[ "$VERSION" =~ ^v[0-9]+(\.[0-9]+(\.[0-9]+)?)?$ ]]; then
            echo "‚ùå Invalid version format: $VERSION"
            echo "Version should be in format: v1, v1.0, or v1.0.0"
            exit 1
          fi
          echo "‚úÖ Valid version: $VERSION"
          
      - name: Check if version exists in CHANGELOG
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          VERSION_NUM=${VERSION#v}
          # Try to find version in CHANGELOG (could be 1 or 1.0.0)
          if ! grep -q "\[$VERSION_NUM" CHANGELOG.md; then
            echo "‚ö†Ô∏è Warning: Version $VERSION_NUM not found in CHANGELOG.md"
          else
            echo "‚úÖ Version $VERSION_NUM found in CHANGELOG.md"
          fi
          
      - name: Extract release notes
        id: extract_notes
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          VERSION_NUM=${VERSION#v}
          
          # Try to extract release notes from CHANGELOG
          # Look for version with or without patch/minor numbers
          NOTES=$(awk "/## \\[$VERSION_NUM/,/## \\[/{/## \\[/d; p;}" CHANGELOG.md 2>/dev/null | head -n -1)
          
          if [ -z "$NOTES" ]; then
            NOTES="Release $VERSION - Simplified PR Theme Preview Action
            
            This action automatically creates and manages Shopify preview themes for pull requests.
            
            Key features:
            - Uses PR title as theme name
            - Automatic deployment and cleanup
            - Settings preservation
            - Preview links in PR comments"
          fi
          
          # Save to file for GitHub release
          echo "$NOTES" > release_notes.md
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true
          
      - name: Update major version tag
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          # Extract major version (v1 from v1 or v1.0.0)
          MAJOR_VERSION=$(echo $VERSION | grep -oE '^v[0-9]+' || echo $VERSION)
          
          # Only update if it's different from current tag
          if [ "$VERSION" != "$MAJOR_VERSION" ]; then
            # Delete existing major version tag if it exists
            git tag -d $MAJOR_VERSION 2>/dev/null || true
            git push origin :refs/tags/$MAJOR_VERSION 2>/dev/null || true
            
            # Create new major version tag
            git tag $MAJOR_VERSION
            git push origin $MAJOR_VERSION
            
            echo "‚úÖ Updated major version tag: $MAJOR_VERSION"
          else
            echo "‚ÑπÔ∏è Version tag $VERSION is already a major version tag"
          fi
          
      - name: Notify Marketplace
        run: |
          echo "üéâ Release ${{ steps.get_version.outputs.version }} is ready!"
          echo "The action is now available in the GitHub Marketplace"
          echo "Users can reference it as:"
          echo "  - ShopLab-Team/shopify-pr-theme-preview@${{ steps.get_version.outputs.version }}"
          echo "  - ShopLab-Team/shopify-pr-theme-preview@$(echo ${{ steps.get_version.outputs.version }} | cut -d. -f1)"
