name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          
      - name: Validate version format
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          if ! [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "Version should be in format: v1.0.0"
            exit 1
          fi
          echo "✅ Valid version: $VERSION"
          
      - name: Check if version exists in CHANGELOG
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          VERSION_NUM=${VERSION#v}
          if ! grep -q "\[$VERSION_NUM\]" CHANGELOG.md; then
            echo "⚠️ Warning: Version $VERSION_NUM not found in CHANGELOG.md"
          fi
          
      - name: Extract release notes
        id: extract_notes
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          VERSION_NUM=${VERSION#v}
          
          # Extract release notes from CHANGELOG
          NOTES=$(awk "/## \[$VERSION_NUM\]/,/## \[/{/## \[/d; p;}" CHANGELOG.md | head -n -1)
          
          if [ -z "$NOTES" ]; then
            NOTES="Release $VERSION"
          fi
          
          # Save to file for GitHub release
          echo "$NOTES" > release_notes.md
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true
          
      - name: Update major version tag
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
          
          # Delete existing major version tag if it exists
          git tag -d $MAJOR_VERSION 2>/dev/null || true
          git push origin :refs/tags/$MAJOR_VERSION 2>/dev/null || true
          
          # Create new major version tag
          git tag $MAJOR_VERSION
          git push origin $MAJOR_VERSION
          
          echo "✅ Updated major version tag: $MAJOR_VERSION"
          
      - name: Notify Marketplace
        run: |
          echo "🎉 Release ${{ steps.get_version.outputs.version }} is ready!"
          echo "The action is now available in the GitHub Marketplace"
          echo "Users can reference it as:"
          echo "  - shoplab/shopify-pr-theme-preview@${{ steps.get_version.outputs.version }}"
          echo "  - shoplab/shopify-pr-theme-preview@$(echo ${{ steps.get_version.outputs.version }} | cut -d. -f1)"
